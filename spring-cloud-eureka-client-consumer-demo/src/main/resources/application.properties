spring.application.name=user-service-consumer

server.port=8083

management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info

#eureka server单节点
eureka.client.server.port=8761
eureka.client.service-url.defaultZone=http://localhost:${eureka.client.server.port}/eureka

#eureka server多节点
#eureka.client.service-url.defaultZone=http://peer2:8764/eureka

#利用应用名加随机数的方式区分不同的实例，从而实现在同一主机上不指定端口就能轻松启动多个实例的效果
eureka.instance.instance-id=${spring.application.name}:${server.port}:${random.int}

#eureka 服务续约 心跳
#定义服务续约任务的调用间隔时间(eureka客户端需要向eureka服务器发送心跳的频率)
eureka.instance.lease-renewal-interval-in-seconds=30
#定义服务失效的时间(eureka接受到最后一次心跳后，过了该时间间隔没有收到下一次心跳，将会把该实例移除)
eureka.instance.lease-expiration-duration-in-seconds=90

#eureka 服务清单缓存时间
eureka.client.registry-fetch-interval-seconds=30

#启用eureka客服端，默认为true
eureka.client.enabled=true
#更新实例信息的变化到eureka服务端的间隔时间
eureka.client.instance-info-replication-interval-seconds=30
#初始化实例信息的变化到eureka服务端的间隔时间
eureka.client.initial-instance-info-replication-interval-seconds=40
#轮询eureka服务端地址更改的间隔时间，与Spring Cloud Config配合，动态刷新eureka的serviceUrl地址时需要关注该参数
eureka.client.eureka-service-url-poll-interval-seconds=300
#读取eureka server信息的超时时间
eureka.client.eureka-server-read-timeout-seconds=8
#链接eureka server的超时时间
eureka.client.eureka-server-connect-timeout-seconds=5
#从eureka客户端到所有eureka服务器的连接总数
eureka.client.eureka-server-total-connections=200
#从eureka客户端到每个eureka服务器的连接总数
eureka.client.eureka-server-total-connections-per-host=50
#eureka服务端连接的空闲关闭时间
eureka.client.eureka-connection-idle-timeout-seconds=30
#心跳连接池的初始化线程数量
eureka.client.heartbeat-executor-thread-pool-size=2
#心跳超时重试延迟时间的最大乘数值
eureka.client.heartbeat-executor-exponential-back-off-bound=10
#缓存刷新线程池的初始化线程数
eureka.client.cache-refresh-executor-thread-pool-size=2
#缓存刷新重试延迟时间的最大乘数值
eureka.client.cache-refresh-executor-exponential-back-off-bound=10
#是否使用DNS来获取eureka服务端的serviceUrl
eureka.client.use-dns-for-fetching-service-urls=false
#是否将自身的实例信息注册到Eureka服务端
eureka.client.register-with-eureka=true
#是否偏好使用处于相同Zone的Eureka服务端
eureka.client.prefer-same-zone-eureka=true
#获取实例时是否过滤，仅保留UP状态的实例
eureka.client.filter-only-up-instances=true
#是否从Eureka服务端获取注册信息
eureka.client.fetch-registry=true

eureka.instance.status-page-url-path=/actuator/health